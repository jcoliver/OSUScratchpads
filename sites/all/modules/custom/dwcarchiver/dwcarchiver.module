<?php

/**
 * Implements hook_menu()
 * 
 * Provide the default configuration pages for adding DwC-A files
 */
function dwcarchiver_menu(){
  return array(
    'admin/config/content/dwcarchiver' => array(
      'title' => 'DwC-Archiver',
      'description' => 'Add and configure custom DwC-Archives.',
      'page callback' => 'dwcarchiver_overview_page',
      'access arguments' => array(
        'configure dwcarchiver'
      ),
      'file' => 'dwcarchiver.pages.inc'
    ),
    'admin/config/content/dwcarchiver/add' => array(
      'title' => 'Add DwC-Archive',
      'description' => 'Add custom DwC-Archive',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
        'dwcarchiver_archive_form'
      ),
      'access arguments' => array(
        'configure dwcarchiver'
      ),
      'file' => 'dwcarchiver.pages.inc',
      'type' => MENU_LOCAL_ACTION
    ),
    'admin/config/content/dwcarchiver/%dwcarchiver' => array(
      'title callback' => 'dwcarchiver_page_title',
      'title arguments' => array(
        4
      ),
      'page callback' => 'dwcarchiver_page_view',
      'page arguments' => array(
        4
      ),
      'access arguments' => array(
        'configure dwcarchiver'
      ),
      'title' => 'Edit',
      'page callback' => 'dwcarchiver_edit',
      'page arguments' => array(
        4
      ),
      'access arguments' => array(
        'configure dwcarchiver'
      ),
      'file' => 'dwcarchiver.pages.inc'
    ),
    'admin/config/content/dwcarchiver/%dwcarchiver/view' => array(
      'title' => 'View',
      'type' => MENU_DEFAULT_LOCAL_TASK
    ),
    'admin/config/content/dwcarchiver/%dwcarchiver/edit' => array(
      'title' => 'Edit',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
        'dwcarchiver_archive_form',
        4
      ),
      'access arguments' => array(
        'configure dwcarchiver'
      ),
      'file' => 'dwcarchiver.pages.inc'
    ),
    'admin/config/content/dwcarchiver/%dwcarchiver/delete' => array(
      'title' => 'Edit',
      'page callback' => 'dwcarchiver_edit',
      'page arguments' => array(
        4
      ),
      'access arguments' => array(
        'configure dwcarchiver'
      ),
      'file' => 'dwcarchiver.pages.inc'
    ),
    'admin/config/content/dwcarchiver/%dwcarchiver/rebuild' => array(
      'title' => 'Rebuild',
      'page callback' => 'dwcarchiver_rebuild',
      'page arguments' => array(
        4
      ),
      'access arguments' => array(
        'configure dwcarchiver'
      ),
      'file' => 'dwcarchiver.pages.inc'
    )
  );
}

/**
 * Implements hook_theme()
 */
function dwcarchiver_theme($existing, $type, $theme, $path){
  return array(
    'dwcarchiver_archive_form' => array(
      'render element' => 'form',
      'file' => 'dwcarchiver.theme.inc'
    )
  );
}

/**
 * Return the dwcarchiver object matching a machine name.
 *
 */
function dwcarchiver_machine_name_load($name){
  return db_select('dwcarchiver_archive', 'd')->condition('machine_name', $name)->fields('d')->execute()->fetch();
}

/**
 * Implements hook_menu_alter()
 * 
 * Add the DwC-A paths as defined in the settings above.
 */
function dwcarchiver_menu_alter(&$items){}

/**
 * Implements hook_permission()
 */
function dwcarchiver_permission(){
  return array(
    'configure dwcarchiver' => array(
      'title' => t('Configure DwC-Archiver')
    )
  );
}

/**
 * Load function
 */
function dwcarchiver_load($did){
  return db_select('dwcarchiver_archive', 'd')->fields('d')->condition('did', $did)->execute()->fetch();
}

/**
 * Implements hook_dwcarchiver_core_types_alter() on behalf of the taxonomy
 * module.
 */
function taxonomy_dwcarchiver_core_types_alter(&$core_types){
  foreach(taxonomy_vocabulary_get_names() as $machine_name => $vocabulary){
    $core_types['taxonomy_term/' . $machine_name] = t('Taxonomy terms (%vocabulary_name)', array(
      '%vocabulary_name' => $vocabulary->name
    ));
  }
}