<?php
/**
 * @file
 * Retrieve and save image from Morphbank.
 *
 * Development module for investigating drupal file handling
 */

/**
 * Implements hook_menu().
 */
function morphbank_from_id_menu() {
  // e.g. go to localhost/OSUScratchpads/morphbank_harvest to access the form
//  $items['morphbank_harvest'] = array(
  $items['admin/config/system/morphbank_from_id'] = array(
    'title' => 'Morphbank from ID',
    'description' => t('Harvests images from Morphbank for a given Morphbank ID'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('morphbank_from_id_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Define the form.
 */
function morphbank_from_id_form() {
  $form['mid'] = array(
    '#title' => t('Morphbank ID'),
    '#type' => 'textfield',
    '#description' => t('Please enter the Morphbank ID'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save image'),
  );
  return $form;
}

/**
 * Post-validation action on when form is submitted
 */
function morphbank_from_id_form_submit($form, &$form_state) {
  $mid_string = $form_state['values']['mid']; // get the selected morphbank image id
  $mid = (int) $mid_string;

  //TODO: want to add limit=-1 to query string to return unlimited number of images...?
  //UPDATE: Instead, just add text box with some number (20) as default and instruct
  //  users to enter -1 if they want an unlimited number per search

  // We want to try:
  // 1. get a certain node (start with nid = 7)
  // 2. get the newly added image (what is it?) file_load($fid)
  // 3. add field_data_media_field->set(old list + new image)

  $node_query = new EntityFieldQuery();
  $node_query->entityCondition('entity_type', 'node')
  ->entityCondition('bundle', 'specimen_observation')
  ->fieldCondition('field_catalogue_number', 'value', 'DNA2320', '=');
  $node_result = $node_query->execute();
  if (isset($node_result['node'])) {
    $node_ids = array_keys($node_result['node']);
    $nid = $node_ids[0];
    $node = node_load($nid);

//    $fid = 238;
    $fid = 157;
    $file = file_load($fid);

    if ($file) {
      $wrapper = entity_metadata_wrapper('node', $node);
      if (!$wrapper) {
        drupal_set_message('Wrapper is null for nid @nid', array('@nid' => $nid));
      } else {
        $current_list = $wrapper->field_media->value();

        if (!$current_list) {
          $current_list = array();
        }

        //TODO: Make sure this file is not already attached to this node (via fid)
        // Have to cast the file as an array before attaching it to node
        $file_as_array = (array)$file;
        // Have to add a 'display' element
        $file_as_array['display'] = 1;
        // Add this new file to current list
        $current_list[] = $file_as_array;


        $wrapper->field_media->set($current_list);
        $wrapper->save();
        drupal_set_message(t('Finished attempt at file add'));

      }
    } else {
      drupal_set_message(t('No FILE found with fid = @fid', array('@fid' => $fid)));
    }
  } else {
    drupal_set_message(t('NO NODE FOUND IN QUERY'));
  }
  /*
  //TODO: DO NOT DELETE
  if (is_numeric($mid)) {
      $image_location = 'http://images.morphbank.net/' . '?id=' . $mid . '&imgType=jpg';
      $destination_directory = variable_get('file_default_scheme', 'public') . '://morphbank';
      if (file_prepare_directory($destination_directory, FILE_CREATE_DIRECTORY)) {
        // For the file name, will want the taxonomic name, the morphbank id, and the original file name
        $destination = file_stream_wrapper_uri_normalize($destination_directory . '/temporary_image.jpg');

        $image = file_get_contents($image_location);
        // This save sets status == 1
        $file = file_save_data($image, $destination, FILE_EXISTS_RENAME);

        if (is_object($file)) {
          $filename = $file->filename;
          drupal_set_message(t('Saved image with ID @mid with filename @filename', array('@mid' => $mid, '@filename' => $filename)));
        } else {
          drupal_set_message(t('No file object retrieved for Morphbank ID @mid', array('@mid' => $mid)));
        }
      } else {
        drupal_set_message(t('Morphbank ID number is @mid, but could not create morphbank directory', array('@mid' => $mid)));
      }
  } else {
    drupal_set_message(t('ID is non-numeric: @mid', array('@mid' => $mid_string)));
  }
  */
}