<?php
/**
 * @file  Initial installation of morphbank_harvest module
 *
 * Sets up two tables used in record-keeping.
 */

/**
 * Implements hook_enable().
 */
function morphbank_harvest_enable() {
  // Create morphbank specimen ID field
  $field = array(
    'active' => '1',
    'cardinality' => '1',
    'deleted' => '0',
    'entity_types' => array(),
    'field_name' => 'field_morphbank_specimen_id',
    'type' => 'text',
  );
  $field = field_create_field($field);

  // Add morphbank specimen ID field to Specimen/Observation content types
  $instance = array(
    'bundle' => 'specimen_observation',
    'entity_type' => 'node',
    'field_name' => 'field_morphbank_specimen_id',
    'type' => 'text',
    'label' => t('Morphbank Specimen ID'),
    'required' => 0,
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'default_value' => NULL,
    'deleted' => '0',
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'text',
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0
      ),
    ),
  );
  field_create_instance($instance);

  // Make the directory where images will be stored
  @drupal_mkdir('public://morphbank');
}

/**
 * Implements hook_disable().
 *
 * Deletes records in field_data_field_media and file_usage tables corresponding
 * to files that were harvested from Morphbank.  After records are removed, deletes
 * the files themselves.
 */
function morphbank_harvest_disable() {
  field_delete_field('morphbank_specimen_id');

  // Find all files that were obtained from the morphbank harvest
  $morphbank_files = db_select('morphbank_images', 'm')->fields('m', array('fid'))
    ->distinct() // So each fid is returned only once
    ->execute();
  $fids = array();
  foreach ($morphbank_files as $row) {
    $fids[] = $row->fid;
  }

  // Now delete records from field_data_field_media table
  db_delete('field_data_field_media')->condition('field_media_fid', $fids, 'IN')->execute();

  // Next delete records from file_usage table
  db_delete('file_usage')->condition('fid', $fids, 'IN')->execute();

  // Remove the files themselves
  $files = file_load_multiple($fids);
  foreach ($files as $file) {
    file_delete($file);
  }
}

/**
 * Implements hook_schema().
 *
 * Builds two tables used in record keeping:
 *   morphbank_query, which keeps track of queries to morphbank
 *   morphbank_images, which keeps track of the results (images) from those queries
 */
function morphbank_harvest_schema() {
  $schema = array();
  /*
  // Table to hold queries
  $schema['morphbank_query'] = array(
    'fields' => array(
      'qid' => array(
        'description' => 'Primary key',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'query' => array(
        'description' => 'The URL submitted as query',
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'date_created' => array(
        'description' => 'The date, as Unix timestamp, this query was created',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'latest_execution' => array(
        'description' => 'The date, as Unix timestamp, this query was last executed',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    //TODO: Consider adding indexes?
    'primary key' => array(
      'qid'
    ),
  );
  */
  // Table to hold image information
  $schema['morphbank_images'] = array(
    'fields' => array(
      'mid' => array(
        'description' => 'Primary key',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'qid' => array(
        'description' => 'The ID of the morphbank_query record that produced this image',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'morphbank_image_id' => array(
        'description' => 'The morphbank ID of the image',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
      'last_modified' => array(
        'description' => 'The date, as Unix timestamp, the Morphbank image record was last modified',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'morphbank_specimen_id' => array(
        'description' => 'The morphbank ID for the specimen in the image',
        'type' => 'int',
        'size' => 'normal',
      ),
      'fid' => array(
        'description' => 'The ID of the image in the file_managed table',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
      'original_filename' => array(
        'description' => 'The original name of the file as uploaded to Morphbank',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      )
    ),
    //TODO: Add indexes?
    'primary key' => array(
      'mid',
    ),
  );

  return $schema;
}