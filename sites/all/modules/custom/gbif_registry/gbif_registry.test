<?php

/**
 * @file
*
* Scratchpads gbif registry tests.
*/
class ScratchpadsGbifRegistryTestCase extends ScratchpadsTweaksTestCase{

  protected $admin_user;
  protected $test_user;

  public static function getInfo(){
    return array(
      'name' => 'Gbif Registry',
      'description' => "Tests the gbif registry configuration page",
      'group' => 'Scratchpads'
    );
  }

  /**
   * Enable modules and create users with specific permissions.
   */
  public function setUp(){
    $modules[] = 'gbif_registry';
    parent::setUp($modules);
    //  Create users.
    $this->admin_user = $this->drupalCreateUser(array(
      'access content',
      'access administration pages',
      'administer site configuration',
      'administer users',
      'administer permissions',
      'administer content types',
      'administer nodes',
      'bypass node access',
      'access overlay',
      'access content overview',
      'view the administration theme',
      'access all views',
      'administer comments',
      'administer gbif registry',
      'view gbif registry data'
    ));
    $this->authorised_user = $this->drupalCreateUser(array(
      'access content',
      'view gbif registry data'
    ));
    $this->test_user = $this->drupalCreateUser(array(
      'access content',
    ));
    // We set the legal_accepted on the user so that login passes.
    parent::scratchpads_tweaks_legal_save($this->admin_user->uid);
    parent::scratchpads_tweaks_legal_save($this->authorised_user->uid);
    parent::scratchpads_tweaks_legal_save($this->test_user->uid);
  }


  /**
   *  Tests for the gbif registry settings page
   */
  function testSettingsPage(){
    $this->drupalLogin($this->admin_user);
    $this->drupalGet('admin/config/services/gbif_registry');
    $this->assertText('GBIF Registry', 'GBIF settings page found');
    
    $edit = array();
    $edit['gbif_registry_web_service_url'] = $this->randomName(16);
    $this->drupalPost(NULL, $edit, 'Save configuration'); 
    $this->assertText('The web service URL must end with a "/".', 'Error message successfully shown');  
    
    $edit2 = array();
    $new_value2 = $this->randomName(16) . '/';
    $edit2['gbif_registry_web_service_url'] = $new_value2;
    $this->drupalPost(NULL, $edit2, 'Save configuration');  
    $this->assertText('The configuration options have been saved.');
    $this->assertRaw($new_value2, 'Settings successfully saved');
    
    
  }
}
  